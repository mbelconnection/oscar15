<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2001-2002.
	
	Centre for Research on Inner City Health, St. Michael's Hospital, Toronto. All Rights Reserved.
	This software is published under the GPL GNU General Public License.
	This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
	This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	See the GNU General Public License for more details.
	You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
	
	OSCAR TEAM
	
	This software was written for Centre for Research on Inner City Health, St. Michael's Hospital, Toronto, Ontario, Canada
-->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<hibernate-mapping>
	<class name="org.oscarehr.casemgmt.model.CaseManagementNote" table="casemgmt_note">
		<id name="id" column="note_id" unsaved-value="0">
			<generator class="native" />
		</id>
		<property name="update_date" type="java.util.Date" />
		<property name="demographic_no" />
		<property name="provider_no" />
		<property name="note" />
		<property name="signed" />
		<property name="includeissue" column="include_issue_innote" />
		<property name="signing_provider_no" />
		<property name="encounter_type" />
		<property name="billing_code" />
		<property name="program_no" />
		<property name="agency_no" />
		<property name="reporter_caisi_role" />
		<property name="reporter_program_team" />
		<property name="history" />
                <property name="uuid" />
		<many-to-one name="provider" class="org.oscarehr.PMmodule.model.Provider" column="provider_no" update="false" not-found='ignore' insert="false" lazy="false" />                
		<set name="issues" table="casemgmt_issue_notes" lazy="false">
			<key column="note_id" />
			<many-to-many column="id" class="org.oscarehr.casemgmt.model.CaseManagementIssue" />
		</set>
		<property name="roleName" type="string" formula="(select r.name from caisi_role r where r.role_id = reporter_caisi_role)" />
		<property name="programName" type="string" formula="(select p.name from program p where p.program_id = program_no)" />
                <property name="revision" type="string" formula="(select count(cmn.uuid) from casemgmt_note cmn where cmn.uuid = uuid)" />
		<property name="password" type="string" column="password" />
		<property name="locked" type="boolean" column="locked" />
                
                
	</class>
        <sql-query name="mostRecent">
            <return alias="cmn" class="org.oscarehr.casemgmt.model.CaseManagementNote" />
                select note_id as {cmn.id}, update_date as {cmn.update_date}, demographic_no as {cmn.demographic_no}, provider_no as {cmn.provider_no}, note as {cmn.note},
                    signed as {cmn.signed}, include_issue_innote as {cmn.includeissue}, signing_provider_no as {cmn.signing_provider_no},
                    encounter_type as {cmn.encounter_type}, billing_code as {cmn.billing_code}, program_no as {cmn.program_no}, agency_no as {cmn.agency_no}, 
                    reporter_caisi_role as {cmn.reporter_caisi_role}, reporter_program_team as {cmn.reporter_program_team}, history as {cmn.history},
                    uuid as {cmn.uuid}, password as {cmn.password}, locked as {cmn.locked}, (select r.name from caisi_role r where r.role_id = reporter_caisi_role) as {cmn.roleName},
                    (select p.name from program p where p.program_id = program_no) as {cmn.programName}, 
                    (select count(casemgmt_note.uuid) from casemgmt_note where casemgmt_note.uuid = {cmn.uuid}) as {cmn.revision} from casemgmt_note left join (select max(note_id) as note_id from casemgmt_note where demographic_no = ? group by uuid) recent
                    using(note_id) order by casemgmt_note.update_date asc
        </sql-query>
</hibernate-mapping>
